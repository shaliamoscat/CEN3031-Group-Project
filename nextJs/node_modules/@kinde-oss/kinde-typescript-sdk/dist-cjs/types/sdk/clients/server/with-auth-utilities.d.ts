import { SessionManager } from "../../session-managers";
import type { ClaimTokenType, GetFlagType, FlagType } from '../../utilities/index.js';
declare const withAuthUtilities: (isAuthenticated: (session: SessionManager) => Promise<boolean>) => {
    getUserOrganizations: (sessionManager: SessionManager) => Promise<{
        orgCodes: string[];
    }>;
    getOrganization: (sessionManager: SessionManager) => Promise<{
        orgCode: string | null;
    }>;
    getBooleanFlag: (sessionManager: SessionManager, code: string, defaultValue?: boolean) => Promise<boolean>;
    getIntegerFlag: (sessionManager: SessionManager, code: string, defaultValue?: number) => Promise<number>;
    getPermissions: (sessionManager: SessionManager) => Promise<{
        permissions: string[];
        orgCode: string | null;
    }>;
    getPermission: (sessionManager: SessionManager, name: string) => Promise<{
        orgCode: string | null;
        isGranted: boolean;
    }>;
    getClaimValue: (sessionManager: SessionManager, claim: string, type?: ClaimTokenType) => Promise<unknown | null>;
    getStringFlag: (sessionManager: SessionManager, code: string, defaultValue?: string) => Promise<string>;
    getClaim: (sessionManager: SessionManager, claim: string, type?: ClaimTokenType) => Promise<{
        name: string;
        value: unknown | null;
    }>;
    getFlag: (sessionManager: SessionManager, code: string, defaultValue?: FlagType[keyof FlagType], type?: keyof FlagType) => Promise<GetFlagType>;
};
export default withAuthUtilities;
