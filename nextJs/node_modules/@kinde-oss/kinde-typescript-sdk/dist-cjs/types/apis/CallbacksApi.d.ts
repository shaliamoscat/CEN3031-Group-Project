/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime.js';
import type { LogoutRedirectUrls, RedirectCallbackUrls, ReplaceLogoutRedirectURLsRequest, ReplaceRedirectCallbackURLsRequest, SuccessResponse } from '../models/index.js';
export interface AddLogoutRedirectURLsRequest {
    appId: string;
    replaceLogoutRedirectURLsRequest: ReplaceLogoutRedirectURLsRequest;
}
export interface AddRedirectCallbackURLsRequest {
    appId: string;
    replaceRedirectCallbackURLsRequest: ReplaceRedirectCallbackURLsRequest;
}
export interface DeleteCallbackURLsRequest {
    appId: string;
    urls: string;
}
export interface DeleteLogoutURLsRequest {
    appId: string;
    urls: string;
}
export interface GetCallbackURLsRequest {
    appId: string;
}
export interface GetLogoutURLsRequest {
    appId: string;
}
export interface ReplaceLogoutRedirectURLsOperationRequest {
    appId: string;
    replaceLogoutRedirectURLsRequest: ReplaceLogoutRedirectURLsRequest;
}
export interface ReplaceRedirectCallbackURLsOperationRequest {
    appId: string;
    replaceRedirectCallbackURLsRequest: ReplaceRedirectCallbackURLsRequest;
}
/**
 *
 */
export declare class CallbacksApi extends runtime.BaseAPI {
    /**
     * Add additional logout redirect URLs.
     * Add Logout Redirect URLs
     */
    addLogoutRedirectURLsRaw(requestParameters: AddLogoutRedirectURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Add additional logout redirect URLs.
     * Add Logout Redirect URLs
     */
    addLogoutRedirectURLs(requestParameters: AddLogoutRedirectURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Add additional redirect callback URLs.
     * Add Redirect Callback URLs
     */
    addRedirectCallbackURLsRaw(requestParameters: AddRedirectCallbackURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Add additional redirect callback URLs.
     * Add Redirect Callback URLs
     */
    addRedirectCallbackURLs(requestParameters: AddRedirectCallbackURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Delete callback URLs.
     * Delete Callback URLs
     */
    deleteCallbackURLsRaw(requestParameters: DeleteCallbackURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Delete callback URLs.
     * Delete Callback URLs
     */
    deleteCallbackURLs(requestParameters: DeleteCallbackURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Delete logout URLs.
     * Delete Logout URLs
     */
    deleteLogoutURLsRaw(requestParameters: DeleteLogoutURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Delete logout URLs.
     * Delete Logout URLs
     */
    deleteLogoutURLs(requestParameters: DeleteLogoutURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Returns an application\'s redirect callback URLs.
     * List Callback URLs
     */
    getCallbackURLsRaw(requestParameters: GetCallbackURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RedirectCallbackUrls>>;
    /**
     * Returns an application\'s redirect callback URLs.
     * List Callback URLs
     */
    getCallbackURLs(requestParameters: GetCallbackURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RedirectCallbackUrls>;
    /**
     * Returns an application\'s logout redirect URLs.
     * List Logout URLs
     */
    getLogoutURLsRaw(requestParameters: GetLogoutURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LogoutRedirectUrls>>;
    /**
     * Returns an application\'s logout redirect URLs.
     * List Logout URLs
     */
    getLogoutURLs(requestParameters: GetLogoutURLsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LogoutRedirectUrls>;
    /**
     * Replace all logout redirect URLs.
     * Replace Logout Redirect URLs
     */
    replaceLogoutRedirectURLsRaw(requestParameters: ReplaceLogoutRedirectURLsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Replace all logout redirect URLs.
     * Replace Logout Redirect URLs
     */
    replaceLogoutRedirectURLs(requestParameters: ReplaceLogoutRedirectURLsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Replace all redirect callback URLs.
     * Replace Redirect Callback URLs
     */
    replaceRedirectCallbackURLsRaw(requestParameters: ReplaceRedirectCallbackURLsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Replace all redirect callback URLs.
     * Replace Redirect Callback URLs
     */
    replaceRedirectCallbackURLs(requestParameters: ReplaceRedirectCallbackURLsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
}
