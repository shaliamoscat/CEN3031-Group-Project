/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime.js';
import type { CreateRoleRequest, GetRolesResponse, RolesPermissionResponseInner, SuccessResponse, UpdateRolePermissionsRequest, UpdateRolePermissionsResponse, UpdateRolesRequest } from '../models/index.js';
export interface CreateRoleOperationRequest {
    createRoleRequest?: CreateRoleRequest;
}
export interface DeleteRoleRequest {
    roleId: string;
}
export interface GetRolePermissionRequest {
    roleId: string;
    sort?: GetRolePermissionSortEnum;
    pageSize?: number | null;
    nextToken?: string | null;
}
export interface GetRolesRequest {
    sort?: GetRolesSortEnum;
    pageSize?: number | null;
    nextToken?: string | null;
}
export interface RemoveRolePermissionRequest {
    roleId: string;
    permissionId: string;
}
export interface UpdateRolePermissionsOperationRequest {
    roleId: string;
    updateRolePermissionsRequest: UpdateRolePermissionsRequest;
}
export interface UpdateRolesOperationRequest {
    roleId: string;
    updateRolesRequest?: UpdateRolesRequest;
}
/**
 *
 */
export declare class RolesApi extends runtime.BaseAPI {
    /**
     * Create role.
     * Create Role
     */
    createRoleRaw(requestParameters: CreateRoleOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Create role.
     * Create Role
     */
    createRole(requestParameters?: CreateRoleOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Delete role
     * Delete Role
     */
    deleteRoleRaw(requestParameters: DeleteRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Delete role
     * Delete Role
     */
    deleteRole(requestParameters: DeleteRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Get permissions for a role.
     * Get Role Permissions
     */
    getRolePermissionRaw(requestParameters: GetRolePermissionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<RolesPermissionResponseInner>>>;
    /**
     * Get permissions for a role.
     * Get Role Permissions
     */
    getRolePermission(requestParameters: GetRolePermissionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RolesPermissionResponseInner>>;
    /**
     * The returned list can be sorted by role name or role ID in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.
     * List Roles
     */
    getRolesRaw(requestParameters: GetRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRolesResponse>>;
    /**
     * The returned list can be sorted by role name or role ID in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.
     * List Roles
     */
    getRoles(requestParameters?: GetRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRolesResponse>;
    /**
     * Remove a permission from a role.
     * Remove Role Permission
     */
    removeRolePermissionRaw(requestParameters: RemoveRolePermissionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Remove a permission from a role.
     * Remove Role Permission
     */
    removeRolePermission(requestParameters: RemoveRolePermissionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
    /**
     * Update role permissions.
     * Update Role Permissions
     */
    updateRolePermissionsRaw(requestParameters: UpdateRolePermissionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateRolePermissionsResponse>>;
    /**
     * Update role permissions.
     * Update Role Permissions
     */
    updateRolePermissions(requestParameters: UpdateRolePermissionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateRolePermissionsResponse>;
    /**
     * Update a role
     * Update Role
     */
    updateRolesRaw(requestParameters: UpdateRolesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponse>>;
    /**
     * Update a role
     * Update Role
     */
    updateRoles(requestParameters: UpdateRolesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponse>;
}
/**
 * @export
 */
export declare const GetRolePermissionSortEnum: {
    readonly NameAsc: "name_asc";
    readonly NameDesc: "name_desc";
    readonly IdAsc: "id_asc";
    readonly IdDesc: "id_desc";
};
export type GetRolePermissionSortEnum = typeof GetRolePermissionSortEnum[keyof typeof GetRolePermissionSortEnum];
/**
 * @export
 */
export declare const GetRolesSortEnum: {
    readonly NameAsc: "name_asc";
    readonly NameDesc: "name_desc";
    readonly IdAsc: "id_asc";
    readonly IdDesc: "id_desc";
};
export type GetRolesSortEnum = typeof GetRolesSortEnum[keyof typeof GetRolesSortEnum];
