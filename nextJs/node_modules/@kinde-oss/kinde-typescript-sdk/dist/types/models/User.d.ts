/**
 * Kinde Management API
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { UserIdentitiesInner } from './UserIdentitiesInner.js';
/**
 *
 * @export
 * @interface User
 */
export interface User {
    /**
     * Unique id of the user in Kinde.
     * @type {string}
     * @memberof User
     */
    id?: string;
    /**
     * External id for user.
     * @type {string}
     * @memberof User
     */
    providedId?: string;
    /**
     * Default email address of the user in Kinde.
     * @type {string}
     * @memberof User
     */
    preferredEmail?: string;
    /**
     * User's last name.
     * @type {string}
     * @memberof User
     */
    lastName?: string;
    /**
     * User's first name.
     * @type {string}
     * @memberof User
     */
    firstName?: string;
    /**
     * Whether the user is currently suspended or not.
     * @type {boolean}
     * @memberof User
     */
    isSuspended?: boolean;
    /**
     * User's profile picture URL.
     * @type {string}
     * @memberof User
     */
    picture?: string;
    /**
     * Total number of user sign ins.
     * @type {number}
     * @memberof User
     */
    totalSignIns?: number | null;
    /**
     * Number of consecutive failed user sign ins.
     * @type {number}
     * @memberof User
     */
    failedSignIns?: number | null;
    /**
     * Last sign in date in ISO 8601 format.
     * @type {string}
     * @memberof User
     */
    lastSignedIn?: string | null;
    /**
     * Date of user creation in ISO 8601 format.
     * @type {string}
     * @memberof User
     */
    createdOn?: string | null;
    /**
     * Array of organizations a user belongs to.
     * @type {Array<string>}
     * @memberof User
     */
    organizations?: Array<string>;
    /**
     * Array of identities belonging to the user.
     * @type {Array<UserIdentitiesInner>}
     * @memberof User
     */
    identities?: Array<UserIdentitiesInner>;
}
/**
 * Check if a given object implements the User interface.
 */
export declare function instanceOfUser(value: object): boolean;
export declare function UserFromJSON(json: any): User;
export declare function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User;
export declare function UserToJSON(value?: User | null): any;
